services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-v-1-dev2
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_V_1_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - 5432:5432
    volumes:
      - ${BIND_MOUNT_DATA_PATH}/postgres_data/data:/var/lib/postgresql/data
  redis:
    image: redis:7.2.1-alpine
    container_name: redis-v-1-dev2
    ports:
      - "6379:6379"
  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: meilisearch-v-1-dev2
    ports:
      - "7700:7700"
    environment:
      MEILI_ENV: development
      MEILI_MASTER_KEY: ${MEILISEARCH_V_1_MASTER_KEY}
    volumes:
      - ${BIND_MOUNT_DATA_PATH}/meili_data:/meili_data
  django:
    build:
      context: ./V-Django-Backend/
      dockerfile: ./compose/prod/django/Dockerfile
    image: django-v-1-dev2:latest
    container_name: django-v-1-dev2
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
      - django_static:/django_app/django_static/
    ports:
      - 8000:8000
    environment: &env-vars
      MEILISEARCH_V_1_MASTER_KEY: ${MEILISEARCH_V_1_MASTER_KEY}
      POSTGRES_V_1_PASSWORD: ${POSTGRES_V_1_PASSWORD}
      DJANGO_V_1_SECRET_KEY: ${DJANGO_V_1_SECRET_KEY}
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID}
      GOOGLE_OAUTH_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET}
      CLOUDFLARE_TURNSTILE_SECRET_KEY: ${CLOUDFLARE_TURNSTILE_SECRET_KEY}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      ADMIN_URL_SEGMENT: ${ADMIN_URL_SEGMENT}
    env_file:
      - ./V-Django-Backend/compose/dev/django/.env.dev
    depends_on:
      - postgres
      - redis
      - meilisearch
  celery:
    image: django-v-1-dev2:latest
    container_name: celery-v-1-dev2
    entrypoint: ./compose/dev/django/celery/entrypoint.sh
    # starts a single process for Celery Workers and Celery Beat for the development of this app
    command: celery -A core worker -B --loglevel=INFO 
    volumes:
      - .:/app
    environment: *env-vars
    env_file:
      - ./V-Django-Backend/compose/dev/django/.env.dev
    depends_on:
      - postgres
      - redis
      - django
  go-meilisearch-gateway:
    restart: unless-stopped
    container_name: go-meilisearch-gateway-v-1-dev
    build:
      context: ./Go-Meilisearch-Gateway/
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      MEILISEARCH_V_1_MASTER_KEY: ${MEILISEARCH_V_1_MASTER_KEY}
      # also set in the .env file used by django/celery, make sure it's correct
      MEILISEARCH_URL: "http://meilisearch:7700"
    depends_on:
      - meilisearch
  nginx: 
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Nginx/Dockerfile
      args:
        # for Vite
        REACT_API_URL: ${REACT_API_URL}
        REACT_ClOUDFLARE_TURNSTILE_SITE_KEY: ${REACT_ClOUDFLARE_TURNSTILE_SITE_KEY}
        REACT_URL: ${REACT_URL}
        REACT_GO_MEILISEARCH_GATEWAY_URL: ${REACT_GO_MEILISEARCH_GATEWAY_URL}
        NODE_ENV: 'development'
    container_name: nginx-v-1-dev
    ports:
      - 80:80
    volumes:
      - django_static:/django_app/django_static
      - ./Nginx/dev:/etc/nginx/conf.d
    depends_on: 
      - django
  # certbot:
  #   image: certbot/certbot:latest
  #   volumes:
  #     - ./certbot/www/:/var/www/certbot/:rw
  #     - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  django_static:
